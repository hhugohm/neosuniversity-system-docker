<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TwControlPanel extends \AppBundle\Entity\TwControlPanel implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'courseId', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'emailId', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'enrollmentDate', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'noClassessCompleted', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'iscomplete', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'payIsComplete', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'paypalOrderId', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'paypalPaymentId'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'courseId', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'emailId', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'enrollmentDate', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'noClassessCompleted', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'iscomplete', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'payIsComplete', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'paypalOrderId', '' . "\0" . 'AppBundle\\Entity\\TwControlPanel' . "\0" . 'paypalPaymentId'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TwControlPanel $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getPayIsComplete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayIsComplete', []);

        return parent::getPayIsComplete();
    }

    /**
     * {@inheritDoc}
     */
    public function setPayIsComplete($payIsComplete)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayIsComplete', [$payIsComplete]);

        return parent::setPayIsComplete($payIsComplete);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaypalOrderId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaypalOrderId', []);

        return parent::getPaypalOrderId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaypalOrderId($paypalOrderId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaypalOrderId', [$paypalOrderId]);

        return parent::setPaypalOrderId($paypalOrderId);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaypalPaymentId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaypalPaymentId', []);

        return parent::getPaypalPaymentId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaypalPaymentId($paypalPaymentId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaypalPaymentId', [$paypalPaymentId]);

        return parent::setPaypalPaymentId($paypalPaymentId);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCourseId($courseId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCourseId', [$courseId]);

        return parent::setCourseId($courseId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCourseId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCourseId', []);

        return parent::getCourseId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailId($emailId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailId', [$emailId]);

        return parent::setEmailId($emailId);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailId', []);

        return parent::getEmailId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnrollmentDate($enrollmentDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnrollmentDate', [$enrollmentDate]);

        return parent::setEnrollmentDate($enrollmentDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnrollmentDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnrollmentDate', []);

        return parent::getEnrollmentDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoClassessCompleted($noClassessCompleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoClassessCompleted', [$noClassessCompleted]);

        return parent::setNoClassessCompleted($noClassessCompleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoClassessCompleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoClassessCompleted', []);

        return parent::getNoClassessCompleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setIscomplete($iscomplete)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIscomplete', [$iscomplete]);

        return parent::setIscomplete($iscomplete);
    }

    /**
     * {@inheritDoc}
     */
    public function getIscomplete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIscomplete', []);

        return parent::getIscomplete();
    }

}
